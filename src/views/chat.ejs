<style>
    /* Button used to open the chat form - fixed at the bottom of the page */
    .open-button {
        background-color: #555;
        color: white;
        padding: 16px 20px;
        border: none;
        cursor: pointer;
        opacity: 0.8;
        position: fixed;
        bottom: 23px;
        right: 28px;
        width: 280px;
        z-index: 3;
    }

    /* The popup chat - hidden by default */
    .chat-popup {
        display: none;
        position: fixed;
        bottom: 0;
        right: 15px;
        border: 3px solid #f1f1f1;
        z-index: 9;
        background: #ffffff;
    }

    #msgs {
        max-height: 40vh;
        overflow-y: auto;
        background: #f1f1f1;
    }

    /* Add styles to the form container */
    .form-container {
        max-width: 300px;
        padding: 10px;
        background-color: white;
    }

    /* Full-width textarea */
    .form-container input#text {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        border: none;
        background: #f1f1f1;
        resize: none;
        /* min-height: 200px; */
    }

    /* When the textarea gets focus, do something */
    .form-container textarea:focus {
        background-color: #ddd;
        outline: none;
    }

    /* Set a style for the submit/send button */
    .form-container .btn {
        background-color: #04AA6D;
        color: white;
        padding: 16px 20px;
        border: none;
        cursor: pointer;
        width: 100%;
        margin-bottom: 10px;
        opacity: 0.8;
    }

    /* Add a red background color to the cancel button */
    .form-container .cancel {
        background-color: red;
    }

    /* Add some hover effects to buttons */
    .form-container .btn:hover,
    .open-button:hover {
        opacity: 1;
    }
</style>


<button class="open-button" onclick="openForm()">Chat</button>
<div class="chat-popup" id="myForm">
    <h1 style="text-align:center; font-size: 175%">Support Channel</h1>
    <div id="msgs"></div>
    <form action="#" id="msg-form" class="form-container">
        <input type="text" placeholder="Type message.." name="message" id="text" required>
        <input type="submit" value="send" id="submit-btn" class="btn">
        <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
        <button id="send-location-btn">Send location</button>
    </form>
</div>

<script id="msg-template" type="text/html">
    <div>
        <p style="color: gray; font-size:75%">
            <span>{{username}}</span>
            <span>{{createdAt}}</span>
        </p>
        <p> {{message}}</p>
    </div>
</script>

<script id="location-url-template" type="text/html">
    <div>
        <p style="color: gray; font-size:75%">
            <span>{{username}}</span>
            <span>{{createdAt}}</span>
        </p>
        <p><a href="{{url}}" target="_blank">My current location</a></p>
    </div>
</script>

<script>
    function openForm() {
        document.getElementById("myForm").style.display = "block";
    }

    function closeForm() {
        document.getElementById("myForm").style.display = "none";
    }
</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/3.0.1/mustache.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.6.0/qs.min.js"></script>
<!-- <script src="/socket.io/socket.io.js"></script> -->
<script src="https://cdn.socket.io/4.4.0/socket.io.min.js"
    integrity="sha384-1fOn6VtTq3PWwfsOrk45LnYcGosJwzMHv+Xh/Jx5303FVOXzEnw0EpLv30mtjmlj"
    crossorigin="anonymous"></script>
<!-- <script src="./scripts/chat.js"></script> -->

<script>
    const socket = io();

    // Elements
    const $msgForm = document.querySelector("#msg-form")
    const $msgInput = $msgForm.querySelector("input")
    const $msgFormBtn = document.querySelector('#submit-btn')
    const $sendLocationBtn = document.querySelector('#send-location-btn')
    const $msgsDiv = document.querySelector("#msgs")

    // Templates
    const msgTemplate = document.querySelector("#msg-template").innerHTML
    const urlTemplate = document.querySelector("#location-url-template").innerHTML

    // Options
    // const { username, room } = Qs.parse(location.search, { ignoreQueryPrefix: true })
    const { username, room } = {
        username: $('#username').html(),
    }
    $msgForm.addEventListener("submit", (e) => {
        e.preventDefault();

        $msgFormBtn.setAttribute("disabled", "disabled")

        let msg = e.target.elements.message.value;

        socket.emit("sendMessage", msg, username, (err) => {
            $msgFormBtn.removeAttribute("disabled")
            $msgInput.value = ""
            $msgInput.focus()

            if (err) {
                return console.log(err)
            }

            console.log('msg delivered successfully!')
        });
    });


    socket.on("message", (msg) => {
        const html = Mustache.render(msgTemplate, {
            username: msg.username,
            message: msg.text,
            createdAt: moment(msg.createdAt).format('h:mm a')
        });
        $msgsDiv.insertAdjacentHTML('beforeend', html)
        var objDiv = document.getElementById("msgs");
        objDiv.scrollTop = objDiv.scrollHeight;

    })

    socket.on("locationMessage", (url) => {
        const html = Mustache.render(urlTemplate, {
            username: url.username,
            url: url.url,
            createdAt: moment(url.createdAt).format('h:mm a')
        });
        $msgsDiv.insertAdjacentHTML('beforeend', html)
        var objDiv = document.getElementById("msgs");
        objDiv.scrollTop = objDiv.scrollHeight;
    })

    $sendLocationBtn.addEventListener("click", () => {
        if (!navigator.geolocation) {
            return alert("Geolocation is not supported on this browser");
        }

        $sendLocationBtn.setAttribute("disabled", "disabled")

        navigator.geolocation.getCurrentPosition((position) => {
            socket.emit('sendLocation', {
                latitude: position.coords.latitude,
                longtitude: position.coords.longitude
            }, username, () => {
                $sendLocationBtn.removeAttribute("disabled")
                console.log("Location shared!")
            })
        });
    });


    socket.emit('join', { username, room })
</script>